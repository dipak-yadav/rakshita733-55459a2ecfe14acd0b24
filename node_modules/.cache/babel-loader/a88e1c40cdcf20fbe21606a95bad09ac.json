{"ast":null,"code":"var _jsxFileName = \"/home/rakshita_panchal/Documents/rakshita_practical_test/rakshita733-55459a2ecfe14acd0b24/src/components/user/UserForm.js\";\n\n/**\n * This Component is used for Show User Country form\n *\n */\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = ({\n  dispatch\n}, props) => ({\n  dispatch: dispatch,\n  props\n});\n\nconst UserForm = ({\n  dispatch,\n  props\n}) => {\n  const history = useHistory();\n  const [countryName, setCountryName] = useState(\"\");\n  const [isDisable, setIsDisable] = useState(true);\n  useEffect(() => {}, []);\n  /**\n   * Method used for submit form data\n   */\n\n  const onSubmit = () => {\n    dispatch({\n      type: \"user/ADD_USER_COUNTRY\",\n      payload: {\n        country: countryName\n      }\n    });\n    history.push(\"/country-details\");\n  };\n  /**\n   * Method for on change event\n   * @param {*} event \n   */\n\n\n  const onHandleChange = event => {\n    setCountryName(event.target.value);\n\n    if (event.target.value !== \"\") {\n      setIsDisable(false);\n    } else {\n      setIsDisable(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"User Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    classNames: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"country\",\n    classNames: \"form-control\",\n    id: \"country\",\n    placeholder: \" Enter country\",\n    required: true,\n    value: countryName,\n    onChange: e => onHandleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    classNames: \"btn btn-primary\",\n    disabled: isDisable,\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default connect(mapStateToProps)(UserForm);","map":{"version":3,"sources":["/home/rakshita_panchal/Documents/rakshita_practical_test/rakshita733-55459a2ecfe14acd0b24/src/components/user/UserForm.js"],"names":["React","useEffect","useState","useHistory","connect","mapStateToProps","dispatch","props","UserForm","history","countryName","setCountryName","isDisable","setIsDisable","onSubmit","type","payload","country","push","onHandleChange","event","target","value","e"],"mappings":";;AAAA;;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAeC,KAAf,MAA0B;AAChDD,EAAAA,QAAQ,EAAEA,QADsC;AAEhDC,EAAAA;AAFgD,CAA1B,CAAxB;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACxC,QAAME,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA;;;;AAGA,QAAMa,QAAQ,GAAG,MAAM;AACrBR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,uBADC;AAEPC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAEP;AAAX;AAFF,KAAD,CAAR;AAIAD,IAAAA,OAAO,CAACS,IAAR,CAAa,kBAAb;AACD,GAND;AAQF;;;;;;AAIE,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AACA,QAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAPD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,UAAU,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,UAAU,EAAC,cAFb;AAGE,IAAA,EAAE,EAAC,SAHL;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAEH,WANT;AAOE,IAAA,QAAQ,EAAGa,CAAD,IAAOJ,cAAc,CAACI,CAAD,CAPjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAcE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,UAAU,EAAC,iBAFb;AAGE,IAAA,QAAQ,EAAEX,SAHZ;AAIE,IAAA,OAAO,EAAEE,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,CAHF,CADF;AA6BD,CA7DD;;AA+DA,eAAeV,OAAO,CAACC,eAAD,CAAP,CAAyBG,QAAzB,CAAf","sourcesContent":["/**\n * This Component is used for Show User Country form\n *\n */\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = ({ dispatch }, props) => ({\n  dispatch: dispatch,\n  props\n});\n\nconst UserForm = ({ dispatch, props }) => {\n  const history = useHistory();\n\n  const [countryName, setCountryName] = useState(\"\");\n  const [isDisable, setIsDisable] = useState(true);\n\n  useEffect(() => {}, []);\n\n  /**\n   * Method used for submit form data\n   */\n  const onSubmit = () => {\n    dispatch({\n      type: \"user/ADD_USER_COUNTRY\",\n      payload: { country: countryName },\n    });\n    history.push(\"/country-details\");\n  };\n\n/**\n * Method for on change event\n * @param {*} event \n */\n  const onHandleChange = (event) => {\n    setCountryName(event.target.value);\n    if (event.target.value !== \"\") {\n      setIsDisable(false);\n    } else {\n      setIsDisable(true);\n    }\n  };\n\n  return (\n    <div>\n      <h3>User Details</h3>\n      <div className=\"container\"></div>\n      <form>\n        <div classNames=\"form-group\">\n          <label for=\"country\">Country</label>\n          <input\n            type=\"country\"\n            classNames=\"form-control\"\n            id=\"country\"\n            placeholder=\" Enter country\"\n            required\n            value={countryName}\n            onChange={(e) => onHandleChange(e)}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          classNames=\"btn btn-primary\"\n          disabled={isDisable}\n          onClick={onSubmit}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(UserForm);\n"]},"metadata":{},"sourceType":"module"}