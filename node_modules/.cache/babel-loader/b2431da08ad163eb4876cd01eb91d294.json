{"ast":null,"code":"import { all, takeEvery, put, call } from \"redux-saga/effects\";\nimport actions from \"./actions\"; // import {fetchUser} from '../../services/api'\n\nexport function* ADD_FIBONACCI_SERIES({\n  payload\n}) {\n  // const userData = yield call(fetchUser, action.userId);\n  yield put({\n    type: \"user/SET_STATE\",\n    payload: {\n      fibonacciArr: payload\n    }\n  });\n}\nexport function* ADD_COMBINE_ARR({\n  payload\n}) {\n  yield put({\n    type: \"user/SET_STATE\",\n    payload: {\n      combineArr: payload\n    }\n  });\n}\nexport function* REMOVE_ARR({\n  payload\n}) {\n  switch (payload) {\n    case \"combineArr\":\n      yield put({\n        type: \"user/SET_STATE\",\n        payload: {\n          combineArr: []\n        }\n      });\n      break;\n\n    case \"fibonacci\":\n      yield put({\n        type: \"user/SET_STATE\",\n        payload: {\n          fibonacciArr: []\n        }\n      });\n      break;\n\n    default:\n  }\n}\nexport function* ADD_USER_COUNTRY({\n  payload\n}) {\n  debugger;\n  yield put({\n    type: \"user/SET_STATE\",\n    payload: {\n      countryName: payload\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([// takeEvery(actions.ADD_FIBONACCI_SERIES, ADD_FIBONACCI_SERIES),\n  // takeEvery(actions.ADD_COMBINE_ARR, ADD_COMBINE_ARR),\n  // takeEvery(actions.REMOVE_ARR, REMOVE_ARR),\n  takeEvery(actions.ADD_USER_COUNTRY, ADD_USER_COUNTRY)]);\n}","map":{"version":3,"sources":["/home/rakshita_panchal/Documents/rakshita_practical_test/rakshita733-55459a2ecfe14acd0b24/src/redux/user/sagas.js"],"names":["all","takeEvery","put","call","actions","ADD_FIBONACCI_SERIES","payload","type","fibonacciArr","ADD_COMBINE_ARR","combineArr","REMOVE_ARR","ADD_USER_COUNTRY","countryName","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAEA,OAAO,UAAUC,oBAAV,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA4C;AACjD;AAEA,QAAMJ,GAAG,CAAC;AACRK,IAAAA,IAAI,EAAE,gBADE;AAERD,IAAAA,OAAO,EAAE;AACPE,MAAAA,YAAY,EAAEF;AADP;AAFD,GAAD,CAAT;AAMD;AAED,OAAO,UAAUG,eAAV,CAA0B;AAAEH,EAAAA;AAAF,CAA1B,EAAuC;AAE5C,QAAMJ,GAAG,CAAC;AACRK,IAAAA,IAAI,EAAE,gBADE;AAERD,IAAAA,OAAO,EAAE;AACPI,MAAAA,UAAU,EAAEJ;AADL;AAFD,GAAD,CAAT;AAMD;AAED,OAAO,UAAUK,UAAV,CAAqB;AAAEL,EAAAA;AAAF,CAArB,EAAkC;AACvC,UAAQA,OAAR;AACE,SAAK,YAAL;AACE,YAAMJ,GAAG,CAAC;AACRK,QAAAA,IAAI,EAAE,gBADE;AAERD,QAAAA,OAAO,EAAE;AACPI,UAAAA,UAAU,EAAE;AADL;AAFD,OAAD,CAAT;AAMA;;AACF,SAAK,WAAL;AACE,YAAMR,GAAG,CAAC;AACRK,QAAAA,IAAI,EAAE,gBADE;AAERD,QAAAA,OAAO,EAAE;AACPE,UAAAA,YAAY,EAAE;AADP;AAFD,OAAD,CAAT;AAMA;;AACA;AAjBJ;AAoBD;AAED,OAAO,UAAUI,gBAAV,CAA2B;AAAEN,EAAAA;AAAF,CAA3B,EAAwC;AAC/C;AACE,QAAMJ,GAAG,CAAC;AACRK,IAAAA,IAAI,EAAE,gBADE;AAERD,IAAAA,OAAO,EAAE;AACPO,MAAAA,WAAW,EAAEP;AADN;AAFD,GAAD,CAAT;AAMD;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMd,GAAG,CAAC,CACR;AACA;AACA;AACAC,EAAAA,SAAS,CAACG,OAAO,CAACQ,gBAAT,EAA2BA,gBAA3B,CAJD,CAAD,CAAT;AAMD","sourcesContent":["import { all, takeEvery, put, call } from \"redux-saga/effects\";\nimport actions from \"./actions\";\n// import {fetchUser} from '../../services/api'\n\nexport function* ADD_FIBONACCI_SERIES({ payload }) {\n  // const userData = yield call(fetchUser, action.userId);\n\n  yield put({\n    type: \"user/SET_STATE\",\n    payload: {\n      fibonacciArr: payload\n    }\n  });\n}\n\nexport function* ADD_COMBINE_ARR({ payload }) {\n\n  yield put({\n    type: \"user/SET_STATE\",\n    payload: {\n      combineArr: payload\n    }\n  });\n}\n\nexport function* REMOVE_ARR({ payload }) {\n  switch (payload) {\n    case \"combineArr\":\n      yield put({\n        type: \"user/SET_STATE\",\n        payload: {\n          combineArr: []\n        }\n      });\n      break;\n    case \"fibonacci\":\n      yield put({\n        type: \"user/SET_STATE\",\n        payload: {\n          fibonacciArr: []\n        }\n      });\n      break;\n      default:\n\n  }\n}\n\nexport function* ADD_USER_COUNTRY({ payload }) {\ndebugger\n  yield put({\n    type: \"user/SET_STATE\",\n    payload: {\n      countryName: payload\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([\n    // takeEvery(actions.ADD_FIBONACCI_SERIES, ADD_FIBONACCI_SERIES),\n    // takeEvery(actions.ADD_COMBINE_ARR, ADD_COMBINE_ARR),\n    // takeEvery(actions.REMOVE_ARR, REMOVE_ARR),\n    takeEvery(actions.ADD_USER_COUNTRY, ADD_USER_COUNTRY)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}