{"ast":null,"code":"var _jsxFileName = \"/home/rakshita_panchal/Documents/rakshita_practical_test/rakshita733-55459a2ecfe14acd0b24/src/components/Fibonacci.js\";\n\n/**\n * This Component is used for Displaying Fibonacci series\n *\n */\nimport React, { useEffect, useState } from \"react\";\nimport Utils from \"../constants/utils\";\nimport { connect } from 'react-redux';\nimport { Button } from \"react-bootstrap\";\n\nconst mapStateToProps = ({\n  dispatch\n}) => ({\n  dispatch: dispatch\n});\n\nconst Fibonacci = ({\n  dispatch\n}) => {\n  let [fibonacciNumber, setFibonacciNumber] = useState(\"\");\n  useEffect(() => {}, []);\n  /**\n   * \n   * @param {*} event \n   * This method is used for set fibonacci number value\n   */\n\n  const setNumber = event => {\n    setFibonacciNumber(event.target.value);\n  };\n  /**\n   * This method is used for get fibonacci series from fibonacci number value\n   */\n\n\n  const getFibonacciSeries = () => {\n    let result = Utils.FibonacciSeries(fibonacciNumber);\n    dispatch({\n      type: 'user/ADD_FIBONACCI_SERIES',\n      payload: result\n    });\n  };\n  /**\n   * This method is used for clear output value\n   */\n\n\n  const onClear = () => {\n    dispatch({\n      type: 'user/REMOVE_ARR',\n      payload: 'fibonacci'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Enter Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"number\",\n    name: \"number\",\n    onChange: e => setNumber(e),\n    value: fibonacciNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: getFibonacciSeries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: onClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Clear\"));\n};\n\nexport default connect(mapStateToProps)(Fibonacci);","map":{"version":3,"sources":["/home/rakshita_panchal/Documents/rakshita_practical_test/rakshita733-55459a2ecfe14acd0b24/src/components/Fibonacci.js"],"names":["React","useEffect","useState","Utils","connect","Button","mapStateToProps","dispatch","Fibonacci","fibonacciNumber","setFibonacciNumber","setNumber","event","target","value","getFibonacciSeries","result","FibonacciSeries","type","payload","onClear","e"],"mappings":";;AAAA;;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAmB;AACzCA,EAAAA,QAAQ,EAACA;AADgC,CAAnB,CAAxB;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAgB;AAChC,MAAI,CAACE,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA;;;;;;AAKA,QAAMU,SAAS,GAAGC,KAAK,IAAI;AACzBF,IAAAA,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,GAFD;AAIA;;;;;AAGA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,MAAM,GAAGb,KAAK,CAACc,eAAN,CAAsBR,eAAtB,CAAb;AACAF,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,2BADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAND;AAQA;;;;;AAGA,QAAMI,OAAO,GAAG,MAAM;AACpBb,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAEE,CAAC,IAAIV,SAAS,CAACU,CAAD,CAJ1B;AAKE,IAAA,KAAK,EAAEZ,eALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAC,mBAAjB;AAAqC,IAAA,OAAO,EAAEM,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEK,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,CADF;AAcD,CAjDD;;AAmDA,eAAehB,OAAO,CAACE,eAAD,CAAP,CAAyBE,SAAzB,CAAf","sourcesContent":["/**\n * This Component is used for Displaying Fibonacci series\n *\n */\nimport React, { useEffect, useState } from \"react\";\nimport Utils from \"../constants/utils\";\nimport { connect } from 'react-redux'\nimport { Button } from \"react-bootstrap\";\n\n\nconst mapStateToProps = ({ dispatch }) => ({\n  dispatch:dispatch,\n})\n\nconst Fibonacci = ({dispatch}) => {\n  let [fibonacciNumber, setFibonacciNumber] = useState(\"\");\n\n  useEffect(() => {}, []);\n\n  /**\n   * \n   * @param {*} event \n   * This method is used for set fibonacci number value\n   */\n  const setNumber = event => {\n    setFibonacciNumber(event.target.value);\n  };\n\n  /**\n   * This method is used for get fibonacci series from fibonacci number value\n   */\n  const getFibonacciSeries = () => {\n    let result = Utils.FibonacciSeries(fibonacciNumber);\n    dispatch({\n      type: 'user/ADD_FIBONACCI_SERIES',\n      payload: result,\n    })\n  };\n\n  /**\n   * This method is used for clear output value\n   */\n  const onClear = () => {\n    dispatch({\n      type: 'user/REMOVE_ARR',\n      payload: 'fibonacci',\n    })\n  }\n\n  return (\n    <div>\n      <label for=\"number\">Enter Number:</label>\n      <input\n        type=\"text\"\n        id=\"number\"\n        name=\"number\"\n        onChange={e => setNumber(e)}\n        value={fibonacciNumber}\n      />\n      <Button  variant=\"outline-secondary\" onClick={getFibonacciSeries}>Submit</Button>\n      <Button variant=\"outline-secondary\" onClick={onClear}>Clear</Button>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Fibonacci)\n"]},"metadata":{},"sourceType":"module"}