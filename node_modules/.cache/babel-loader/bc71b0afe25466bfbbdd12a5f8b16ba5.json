{"ast":null,"code":"var _jsxFileName = \"/home/rakshita_panchal/Documents/rakshita_practical_test/rakshita733-55459a2ecfe14acd0b24/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport reducers from \"./redux/reducers\";\nimport sagas from \"./redux/sagas\";\nimport { Router } from \"react-router\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\"; // middlewared\n\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [sagaMiddleware, routeMiddleware];\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {// Ignore write errors;\n  }\n};\n\nconst peristedState = loadState();\nconst store = createStore(reducers(history), peristedState, compose(applyMiddleware(...middlewares)));\nsagaMiddleware.run(sagas);\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  history: history,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\nexport { store, history };","map":{"version":3,"sources":["/home/rakshita_panchal/Documents/rakshita_practical_test/rakshita733-55459a2ecfe14acd0b24/src/index.js"],"names":["React","ReactDOM","createBrowserHistory","createStore","applyMiddleware","compose","Provider","createSagaMiddleware","routerMiddleware","reducers","sagas","Router","App","serviceWorker","history","sagaMiddleware","routeMiddleware","middlewares","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","e","saveState","state","stringify","setItem","peristedState","store","run","subscribe","getState","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,sCAAP;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,MAAMC,OAAO,GAAGZ,oBAAoB,EAApC;AACA,MAAMa,cAAc,GAAGR,oBAAoB,EAA3C;AACA,MAAMS,eAAe,GAAGR,gBAAgB,CAACM,OAAD,CAAxC;AACA,MAAMG,WAAW,GAAG,CAACF,cAAD,EAAiBC,eAAjB,CAApB;;AAEA,MAAME,SAAS,GAAG,MAAM;AACtB,MAAI;AACF,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAOG,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACV,WAAOH,SAAP;AACD;AACF,CAVD;;AAYA,MAAMI,SAAS,GAAGC,KAAK,IAAI;AACzB,MAAI;AACF,UAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BV,eAA9B;AACD,GAHD,CAGE,OAAOM,CAAP,EAAU,CACV;AACD;AACF,CAPD;;AASA,MAAMK,aAAa,GAAGZ,SAAS,EAA/B;AAEA,MAAMa,KAAK,GAAG5B,WAAW,CACvBM,QAAQ,CAACK,OAAD,CADe,EAEvBgB,aAFuB,EAGvBzB,OAAO,CAACD,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAHgB,CAAzB;AAKAF,cAAc,CAACiB,GAAf,CAAmBtB,KAAnB;AAEAqB,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBP,EAAAA,SAAS,CAACK,KAAK,CAACG,QAAN,EAAD,CAAT;AACD,CAFD;AAIAjC,QAAQ,CAACkC,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEjB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAxB,aAAa,CAACyB,UAAd;AACA,SAASP,KAAT,EAAgBjB,OAAhB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport reducers from \"./redux/reducers\";\nimport sagas from \"./redux/sagas\";\nimport { Router } from \"react-router\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// middlewared\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [sagaMiddleware, routeMiddleware];\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    // Ignore write errors;\n  }\n};\n\nconst peristedState = loadState();\n\nconst store = createStore(\n  reducers(history),\n  peristedState,\n  compose(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(sagas);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nexport { store, history };\n"]},"metadata":{},"sourceType":"module"}